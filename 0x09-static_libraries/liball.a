!<arch>
0-isupper.c/    0           0     0     644     0         `
0-memset.c/     0           0     0     644     0         `
0-strcat.c/     0           0     0     644     0         `
1-isdigit.c/    0           0     0     644     0         `
1-memcpy.c/     0           0     0     644     0         `
1-strncat.c/    0           0     0     644     0         `
100-atoi.c/     0           0     0     644     0         `
2-strchr.c/     0           0     0     644     0         `
2-strlen.c/     0           0     0     644     0         `
2-strncpy.c/    0           0     0     644     0         `
3-islower.c/    0           0     0     644     0         `
3-puts.c/       0           0     0     644     266       `
#include "main.h"

/**
 * _puts - Write a function that prints a string, followed
 * by a new line, to stdout.
 * @str: an input string
 * Return: Nothing
 */
void _puts(char *s)
{
	int i = 0;

	while (s[i] != '\0')
	{
		_putchar(s[i]);
		i++;
	}
	_putchar('\n');
}
3-strcmp.c/     0           0     0     644     0         `
3-strspn.c/     0           0     0     644     0         `
4-isalpha.c/    0           0     0     644     0         `
4-strpbrk.c/    0           0     0     644     0         `
5-strstr.c/     0           0     0     644     0         `
6-abs.c/        0           0     0     644     0         `
9-strcpy.c/     0           0     0     644     0         `
_putchar.c/     0           0     0     644     247       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}

main.c/         0           0     0     644     148       `
#include "main.h"

int main(void)
{
    _puts("\"At the end of the day, my goal was to be the best hacker\"\n\t- Kevin Mitnick");
    return (0);
}
